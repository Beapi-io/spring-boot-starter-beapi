
// -Pargs=configType=${configType}
application {
	mainClass = javaMainClass
	applicationDefaultJvmArgs = [project.property('configType.'+configTypeDefault)]
	if (project.hasProperty("args")) {
		List temp = project.args.split(',')
		temp.each(){
			List l = args.split('=')
			if(l[0]=='configType' && project.property('configType.'+l[1])) {
				applicationDefaultJvmArgs = [project.property('configType.'+l[1])]
			}
		}
	}
}

springBoot {
	buildInfo()
}

test {
	useJUnitPlatform()
}

configurations {
	commonWebResources
}

jar {
	manifest {
		attributes 'Main-Class': javaMainClass
	}
}



/*
* Start Block for CLI
*/
if (project.hasProperty("args")) {
	ext.cmdargs = project.getProperty("args")
} else {
	ext.cmdargs = ""
}


// --Pargs="domain=full.class.name"
// --Pargs="controller=package.name, domain=full.class.name"
task scaffold(type: JavaExec) {
	//test {
	//	exclude '**/*'
	//}
	group = "Execution"
	description = "Run the main class with JavaExecTask"
	classpath = sourceSets.main.runtimeClasspath
	main = javaMainClass
	args cmdargs
}
/*
* End Block for CLI
*/





