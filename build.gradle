
buildscript {
    repositories {
        mavenLocal() {
            metadataSources {
                mavenPom()
                artifact()
            }
        }
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("ca.cutterslade.gradle:gradle-dependency-analyze:1.9.0")
    }
}

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    //id 'org.springframework.boot'
    //id 'maven-publish'
    id 'groovy'
    //id "ca.cutterslade.analyze"
}


apply plugin: 'groovy'
apply plugin: 'io.spring.dependency-management'

description = "The Beapi Springboot Starter for API Automation; automates and simplifies almost all API functionality and security"

bootJar {
    enabled = false
}

def gitRev = 'git rev-list --count HEAD'.execute().text.trim()
group = "${group}"
archivesBaseName = "spring-boot-starter-beapi"
version = "${version}"
sourceCompatibility = "${sourceCompatibility}"



java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}


dependencies {
    // [CORE]
    annotationProcessor "org.springframework.boot:spring-boot-autoconfigure-processor:${springBootVersion}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    implementation "jakarta.persistence:jakarta.persistence-api:2.2.3"
    //implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.3"
    implementation "org.apache.tomcat.embed:tomcat-embed-core:9.0.56"
    implementation "org.slf4j:slf4j-api:1.7.32"
    implementation "org.springframework.boot:spring-boot-autoconfigure:2.6.2"
    implementation("org.springframework.security:spring-security-config:5.6.1")
    implementation("org.springframework.security:spring-security-core:5.6.1")
    implementation("org.springframework.security:spring-security-crypto:5.6.1")
    implementation("org.springframework.security:spring-security-web:5.6.1")
    implementation "org.springframework:spring-beans:5.3.14"
    implementation "org.springframework:spring-context:5.3.14"
    implementation "org.springframework:spring-core:5.3.14"
    implementation "org.springframework:spring-web:5.3.14"
    implementation "org.springframework:spring-webmvc:5.3.14"
    implementation "org.springframework.boot:spring-boot:${springBootVersion}"
    implementation 'org.json:json:20210307'

    // [DATABASE]
    implementation('org.apache.tomcat:tomcat-annotations-api:9.0.56')
    implementation('org.hibernate:hibernate-core:5.6.3.Final')
    implementation('org.springframework.data:spring-data-jpa:2.6.0')
    implementation('org.springframework:spring-orm:5.3.14')
    implementation('org.springframework:spring-tx:5.3.14')
    implementation 'com.zaxxer:HikariCP:3.2.0'

    // [LOGGING]
    runtimeOnly 'org.slf4j:slf4j-api:1.7.15'

    // [SECURITY]
    //implementation "com.fasterxml.jackson.core:jackson-databind:2.12.0"
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'
    implementation 'com.google.guava:guava:26.0-jre'

    // [GROOVY]
    implementation 'org.apache.groovy:groovy:4.0.8'
    implementation('org.apache.groovy:groovy-ant:4.0.8'){
        exclude group:'org.apache.groovy', module: 'groovy-all'
    }
    implementation('org.apache.groovy:groovy-json:4.0.8'){
        exclude group:'org.apache.groovy', module: 'groovy-all'
    }

    implementation('org.codehaus.gpars:gpars:1.2.1'){
       exclude group:'org.multiverse', module:'multiverse-core'
        exclude group:'org.codehaus.groovy', module: 'groovy-all'
    }


    // [APACHE LIBS]
    //implementation('org.apache.groovy:groovy-cli-commons:4.0.8'){
    //    exclude group:'org.apache.groovy', module: 'groovy-all'
    //}
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation('org.apache.groovy:groovy-templates:4.0.8') {
        exclude group:'org.apache.groovy', module: 'groovy-all'
    }
    //implementation 'org.apache.httpcomponents:httpclient:4.5.13'


    // [IOUTILS]
    compileOnly 'org.projectlombok:lombok:1.18.20'
    //annotationProcessor 'org.projectlombok:lombok:1.18.2'


    // [SMTP]
    implementation 'org.springframework.boot:spring-boot-starter-mail'


    // CACHING
    implementation 'org.springframework:spring-context-support:5.3.3'
    implementation 'net.sf.ehcache:ehcache:2.9.1'

    // [WEBSOCKETS]
    //implementation 'org.springframework.boot:spring-boot-starter-websocket'
    //implementation 'org.springframework.security:spring-security-messaging:6.1.1'
    //implementation 'org.springframework.boot:spring-boot-starter-security:2.0.4.RELEASE'
    //implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    //implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    // [NEW]
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation("jakarta.validation:jakarta.validation-api:2.0.2")

    // [TEST]
    implementation 'org.apache.groovy:groovy-json:4.0.8'
    //implementation('org.spockframework:spock-core:2.3-groovy-4.0')
    testImplementation('org.spockframework:spock-spring:2.3-groovy-4.0')
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}") {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    //testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    //implementation 'org.apache.httpcomponents:httpclient:4.5.13'
}

jar {
    from('src/main/groovy') {
        include 'io/beapi/api/templates/*.*.template'
    }
}


tasks.register('copy', Copy) {
    from jar
    from('src/main/groovy/io/beapi/api/cli/Beapi.groovy') {
        into(buildDir)
    }
}

task firstCopy(type: Copy) {
    from('src/main/groovy/io/beapi/api/cli/Beapi.groovy') {
        into(buildDir)
    }
}


defaultTasks = ['myExec']















